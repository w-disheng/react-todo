{"version":3,"sources":["actions/index.js","containers/AddToDo.js","components/ToDo.js","components/ToDoList.js","containers/ToDoListContainer.js","components/Navigation.js","MakeRouteWithSubRoutes.js","routes.js","components/NotFound.js","App.js","reducers/index.js","sagas/index.js","index.js"],"names":["ADD_TODO","LOAD_TODO_LIST","RENDER_TODO_LIST","AddToDo","input","dispatch","onSubmit","e","title","preventDefault","value","trim","type","toDoItem","_id","Date","getTime","toString","Group","controlId","Control","placeholder","ref","node","Append","connect","ToDo","Item","ToDoList","toDoList","map","toDo","index","key","ToDoListContainer","state","className","to","MakeRouteWithSubRoutes","route","console","log","path","render","props","component","routes","Routes","JSON","stringify","Navigation","App","xs","Component","initialState","fetchToDoList","loadToDoList","rootSaga","call","fetch","response","json","data","put","takeEvery","all","sagaMiddleware","createSagaMiddleware","store","createStore","action","newToDoList","applyMiddleware","run","document","getElementById"],"mappings":"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","file":"static/js/main.4b481e39.chunk.js","sourcesContent":["// ./actions/index.js\n\nexport const ADD_TODO = 'ADD_TODO';\n// ... ADD_TODO ...\nexport const LOAD_TODO_LIST = 'LOAD_TODO_LIST';\nexport const RENDER_TODO_LIST = 'RENDER_TODO_LIST';\n\n// ... addToDo ...\n\nexport function loadToDoList() {\n  return {\n    type: LOAD_TODO_LIST\n  };\n}\n\nexport function addToDo(title) {\n  return {\n    type: ADD_TODO,\n    toDoItem: {\n      _id: new Date().getTime().toString(),\n      title\n    }\n  };\n}\n","// ./src/containers/AddToDo.js\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addToDo } from '../actions';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\nexport let AddToDo = ({ dispatch }) => {\n  let input;\n\n  return (\n    <Form\n      onSubmit={e => {\n        e.preventDefault();\n        if (!input.value.trim()) {\n          return;\n        }\n        dispatch(addToDo(input.value));\n        input.value = '';\n      }}\n    >\n      <Form.Group controlId=\"formBasicEmail\">\n        <InputGroup>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter an item\"\n            ref={node => {\n              input = node;\n            }}\n          />\n          <InputGroup.Append>\n            <Button type=\"submit\">Add To-Do</Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </Form.Group>\n    </Form>\n  );\n};\nAddToDo = connect()(AddToDo);\n\n","// ./src/components/ToDo.js\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nconst ToDo = ({ title }) => <ListGroup.Item>{title}</ListGroup.Item>;\n\nToDo.propTypes = {\n  title: PropTypes.string.isRequired\n};\n\nexport default ToDo;\n","// ./src/components/ToDoList.js\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport ToDo from './ToDo';\n\nconst ToDoList = ({ toDoList }) => (\n  <Jumbotron>\n    <ListGroup>\n      {toDoList.map((toDo, index) => (\n        <ToDo key={index} {...toDo} />\n      ))}\n    </ListGroup>\n  </Jumbotron>\n);\n\nToDoList.propTypes = {\n  toDoList: PropTypes.arrayOf(\n    PropTypes.shape({\n      _id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired\n    }).isRequired\n  ).isRequired\n};\n\nexport default ToDoList;\n","// ./src/containers/ToDoListContainer.js\n\nimport { connect } from 'react-redux';\nimport ToDoList from '../components/ToDoList';\n\n// 把State中的部分属性，映射到Props中\nconst mapStateToProps = state => {\n  return {\n    toDoList: state.toDoList\n  };\n};\n// 通过connect，这个container组件就订阅了store的状态变化，一旦状态变化，组件也会被触发\nconst ToDoListContainer = connect(mapStateToProps)(ToDoList);\n\nexport default ToDoListContainer;\n","// ./src/components/Navigation.js\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default () => (\n  <div>\n    <Link className=\"btn btn-primary\" to=\"/\">\n      To-Do List\n    </Link>\n    <Link className=\"btn btn-secondary\" to=\"/new-item\">\n      + Add New\n    </Link>\n  </div>\n);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nexport const MakeRouteWithSubRoutes = route => {\n  console.log('In MakeRouteWithSubRoutes: ');\n  console.log(route);\n  return (\n    <Route\n      path={route.path}\n      render={props => (\n        <route.component { ...props} routes={route} />\n      )}\n    />\n  );\n};\n","import { AddToDo } from './containers/AddToDo';\nimport ToDoListContainer from './containers/ToDoListContainer';\nimport { Switch } from 'react-router-dom';\nimport Navigation from './components/Navigation';\nimport NotMatch from './components/NotFound'\nimport React from 'react';\nimport { MakeRouteWithSubRoutes } from './MakeRouteWithSubRoutes';\n\nconst routes = [\n  // Strange here... if I put \"/\" as the first item of the list..\n  // the nacigation does not work, always render the root page..\n  {\n    path: \"/new-item\",\n    component: AddToDo\n  },\n  {\n    path: \"/\",\n    component: ToDoListContainer\n  },\n  {\n    path: \"/:anythingNotMatch\",\n    component: NotMatch,\n  }\n];\n\n\nexport const Routes = (props) => {\n  console.log('In Routes Function: ' + JSON.stringify(routes));\n  console.log(routes);\n  return (\n    <div>\n      <Navigation />\n      <Switch>\n        {\n          routes.map(\n            (route, index) => <MakeRouteWithSubRoutes key={index} {...route} />\n          )\n        }\n      </Switch>\n    </div>\n  )\n};\n","import React from 'react';\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <h3>Route not Found</h3>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","// ./src/App.js\n\nimport React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nimport { Routes } from './routes'\n\nclass App extends Component {\n  render() {\n    return (\n      <Container>\n        <Row className=\"row\">\n          <Col xs={12}>\n            <h1>To Do List</h1>\n            {/* Move all the routes into a switch*/}\n            <Routes/>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// ./reducers/index.js\nimport { ADD_TODO } from '../actions';\nimport { RENDER_TODO_LIST } from '../actions';\n\nconst initialState = {\n  toDoList: []\n};\n\nexport default function toDoApp(state = initialState, action) {\n  if (action.type === ADD_TODO) {\n    let newToDoList = [\n      ...state.toDoList,\n      {\n        ...action.toDoItem\n      }\n    ];\n    return {\n      ...state,\n      toDoList: newToDoList\n    };\n  } else if (action.type === RENDER_TODO_LIST) {\n    return {\n      ...state,\n      toDoList: action.toDoList\n    };\n  } else {\n    return state;\n  }\n}\n","// ./src/sagas/index.js\n\nimport { all, call, put, takeEvery } from 'redux-saga/effects';\nimport { LOAD_TODO_LIST, RENDER_TODO_LIST } from '../actions';\n\nexport function* fetchToDoList() {\n  const endpoint =\n    'https://gist.githubusercontent.com/brunokrebs/' +\n    'f1cacbacd53be83940e1e85860b6c65b/raw/to-do-items.json';\n  const response = yield call(fetch, endpoint);\n  const data = yield response.json();\n  yield put({ type: RENDER_TODO_LIST, toDoList: data });\n}\n\nexport function* loadToDoList() {\n  yield takeEvery(LOAD_TODO_LIST, fetchToDoList);\n}\n\nexport default function* rootSaga() {\n  yield all([loadToDoList()]);\n}\n","// ./src/index.js\n\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport { loadToDoList } from './actions';\nimport toDoApp from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(toDoApp, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n\nstore.dispatch(loadToDoList());\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}